package hometask23;
//1. Разработать и реализовать структуру данных Stack для хранения элементов типа char с максимальным размером стека на 100 символов.
//        реализовать следующие методы:
//
//        void push(char c); // положить элемент в стек. Если стек заполнен полностью, то ничего не делать
//
//        char pop(); // извлечь элемент из стека. Если стек пуст, то вернуть 0.
//
//        char peek(); // узнать какой элемент “находится сверху” (на вершине стека),  без извлечения из самого стека. Если стек пуст, то вернуть 0.
//
//        boolean isEmpty(); // возвращает true, если стек пуст
//
//        boolean isFull(); // возвращает true, если стек полностью заполнен
//
//        2. Реализовать метод выявления  синтаксической корректности некоего выражения анализируя информацию о наличии открывающих
// и закрывающих элементов. Реализовать используя структуру данных stack (используйте реализованную структуру из 1-го подпункта этого задания).
//        Типы скобок в проверяемых выражениях могут быть разного типа и представлены в различных комбинациях, и быть неограниченного уровня вложенности:
//        { }
//        [ ]
//        ( )
//
//        Например:
//        “  ({x-у} + [{z * s} - a] + kb) + 12 - (t - v “


public class RunIt {
    public static void main(String[] args) {
        Expression BigExp = new Expression();
     BigExp.expression("({x-у} + [{z * s} - a] + kb) + 12 - (t - v)");
    }

}
